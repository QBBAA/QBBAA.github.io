// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.15/esri/copyright.txt for details.
//>>built
require({cache:{"esri/geometry/support/scaleUtils":function(){define(["require","exports","../../core/unitUtils"],function(u,k,h){function a(a,f){f=h.getMetersPerUnitForSR(f);return a/(f*h.inchesPerMeter*96)}Object.defineProperty(k,"__esModule",{value:!0});k.getScale=function(a,f){f=f||a.extent;a=a.width;var d=h.getMetersPerUnitForSR(f&&f.spatialReference);return f&&a?f.width/a*d*h.inchesPerMeter*96:0};k.getResolutionForScale=a;k.getScaleForResolution=function(a,f){f=h.getMetersPerUnitForSR(f);return a*
f*h.inchesPerMeter*96};k.getExtentForScale=function(d,f){var c=d.extent;d=d.width;f=a(f,c.spatialReference);return c.clone().expand(f*d/c.width)}})},"esri/layers/mixins/ArcGISMapService":function(){define("require exports ../../core/tsSupport/declareExtendsHelper ../../core/tsSupport/decorateHelper ../../core/tsSupport/generatorHelper ../../core/tsSupport/awaiterHelper ../../core/tsSupport/assignHelper ../../request ../../core/promiseUtils ../../core/urlUtils ../../core/accessorSupport/decorators ../../geometry/Extent ../../geometry/SpatialReference ../support/commonProperties".split(" "),
function(u,k,h,a,d,f,c,t,q,p,n,v,g,m){Object.defineProperty(k,"__esModule",{value:!0});k.ArcGISMapService=function(c){return function(l){function c(){var a=null!==l&&l.apply(this,arguments)||this;a.capabilities=void 0;a.copyright=null;a.fullExtent=null;a.legendEnabled=!0;a.spatialReference=null;a.version=null;return a}h(c,l);c.prototype.readCapabilities=function(a,c){var d=c.capabilities&&c.capabilities.split(",").map(function(a){return a.toLowerCase().trim()});if(!d)return{operations:{supportsQuery:!1,
supportsExportMap:!1,supportsExportTiles:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};a=this.type;var m=-1!==d.indexOf("query"),f=-1!==d.indexOf("map"),e=!!c.exportTilesAllowed,d=-1!==d.indexOf("tilemap"),l="tile"!==a&&!!c.supportsDynamicLayers,C="tile"!==a&&(!c.tileInfo||l),g="tile"!==a&&(!c.tileInfo||l);return{operations:{supportsQuery:m,supportsExportMap:f,supportsExportTiles:e,supportsTileMap:d},exportMap:f?{supportsSublayersChanges:"tile"!==a,supportsDynamicLayers:l,supportsSublayerVisibility:C,
supportsSublayerDefinitionExpression:g}:null,exportTiles:e?{maxExportTilesCount:+c.maxExportTilesCount}:null}};c.prototype.readVersion=function(a,c){(a=c.currentVersion)||(a=c.hasOwnProperty("capabilities")||c.hasOwnProperty("tables")?10:c.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3);return a};c.prototype.fetchSublayerInfo=function(a,c){return f(this,void 0,void 0,function(){return d(this,function(d){switch(d.label){case 0:return[4,this.fetchAllLayersAndTables(c)];case 1:return d.sent(),
[2,this._allLayersAndTablesMap.get(a)]}})})};c.prototype.fetchAllLayersAndTables=function(a){return f(this,void 0,void 0,function(){var c,m=this;return d(this,function(d){switch(d.label){case 0:return[4,this.load(a)];case 1:return d.sent(),this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=t(p.urlToObject(this.url).path+"/layers",{responseType:"json",query:{f:"json"}}).then(function(a){m._allLayersAndTablesMap=new Map;for(var e=0,c=a.data.layers;e<c.length;e++){var d=c[e];m._allLayersAndTablesMap.set(d.id,
d)}return{result:a.data}},function(a){return{error:a}})),[4,this._allLayersAndTablesPromise];case 2:c=d.sent();q.throwIfAborted(a);if("result"in c)return[2,c.result];throw c.error;}})})};a([n.property({readOnly:!0})],c.prototype,"capabilities",void 0);a([n.reader("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],c.prototype,"readCapabilities",null);a([n.property({json:{read:{source:"copyrightText"}}})],c.prototype,"copyright",
void 0);a([n.property({type:v})],c.prototype,"fullExtent",void 0);a([n.property({json:{origins:{service:{read:!1},"portal-item":{read:!1}}}})],c.prototype,"id",void 0);a([n.property({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],c.prototype,"legendEnabled",void 0);a([n.property(m.popupEnabled)],c.prototype,"popupEnabled",void 0);a([n.property({type:g})],c.prototype,"spatialReference",void 0);a([n.property()],c.prototype,"version",
void 0);a([n.reader("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],c.prototype,"readVersion",null);return c=a([n.subclass("esri.layers.mixins.ArcGISMapService")],c)}(n.declared(c))}})},"esri/layers/mixins/SublayersOwner":function(){define("require exports ../../core/tsSupport/assignHelper ../../core/tsSupport/declareExtendsHelper ../../core/tsSupport/decorateHelper ../../core/Collection ../../core/CollectionFlattener ../../core/Error ../../core/Logger ../../core/accessorSupport/decorators ../../core/accessorSupport/PropertyOrigin ../../core/accessorSupport/utils ../support/Sublayer ../support/sublayerUtils".split(" "),
function(u,k,h,a,d,f,c,t,q,p,n,v,g,m){function x(a,c){var d=[],m={};if(!a)return d;a.forEach(function(a){var e=new g;e.read(a,c);m[e.id]=e;null!=a.parentLayerId&&-1!==a.parentLayerId?(a=m[a.parentLayerId],a.sublayers||(a.sublayers=[]),a.sublayers.unshift(e)):d.unshift(e)});return d}function l(a,c){a&&a.forEach(function(a){c(a);a.sublayers&&a.sublayers.length&&l(a.sublayers,c)})}Object.defineProperty(k,"__esModule",{value:!0});var y=q.getLogger("esri.layers.TileLayer"),z=f.ofType(g);k.forEachSublayer=
l;k.SublayersOwner=function(k){return function(k){function h(){for(var a,e=[],d=0;d<arguments.length;d++)e[d]=arguments[d];var m=k.apply(this,e)||this;m.allSublayers=new c({root:m,rootCollectionNames:["sublayers"],getChildrenFunction:function(a){return a.sublayers}});m.sublayersSourceJSON=(a={},a[2]={},a[3]={},a[4]={},a[5]={},a);m.watch("sublayers",function(a,c){return m._handleSublayersChange(a,c)},!0);return m}a(h,k);h.prototype.readSublayers=function(a,c){if(c&&a){var d=this.sublayersSourceJSON,
e=n.nameToId(c.origin);2>e||(d[e]={context:c,visibleLayers:a.visibleLayers||d[e].visibleLayers,layers:a.layers||d[e].layers},2<e||(this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers),c=this.createSublayersForOrigin("web-document"),a=c.sublayers,c=c.origin,d=v.getProperties(this),d.setDefaultOrigin(c),this._set("sublayers",new z(a)),d.setDefaultOrigin("user")))}};h.prototype.findSublayerById=function(a){return this.allSublayers.find(function(c){return c.id===a})};h.prototype.createServiceSublayers=
function(){return this.createSublayersForOrigin("service").sublayers};h.prototype.createSublayersForOrigin=function(a){var c="web-document"===a?n.nameToId("web-map"):n.nameToId(a),d=2;a=this.sublayersSourceJSON[2].layers;for(var f=this.sublayersSourceJSON[2].context,h=null,g=0,k=[3,4,5].filter(function(a){return a<=c});g<k.length;g++){var p=k[g],q=this.sublayersSourceJSON[p];m.isSublayerOverhaul(q.layers)&&(d=p,a=q.layers,f=q.context,q.visibleLayers&&(h={visibleLayers:q.visibleLayers,context:q.context}))}for(var t=
null,g=0,k=[3,4,5].filter(function(a){return a>d&&a<=c});g<k.length;g++){var r=this.sublayersSourceJSON[k[g]],p=r.layers,q=r.visibleLayers,r=r.context;p&&(t={layers:p,context:r});q&&(h={visibleLayers:q,context:r})}a=x(a,f);var v=new Map,G=new Set;if(t)for(f=0,g=t.layers;f<g.length;f++)k=g[f],v.set(k.id,k);if(h)for(f=0,g=h.visibleLayers;f<g.length;f++)G.add(g[f]);l(a,function(a){t&&a.read(v.get(a.id),t.context);h&&a.read({defaultVisibility:G.has(a.id)},h.context)});return{origin:n.idToName(d),sublayers:new z({items:a})}};
h.prototype.read=function(a,c){this.inherited(arguments);this.readSublayers(a,c)};h.prototype._handleSublayersChange=function(a,c){var d=this;c&&(c.forEach(function(a){a.parent=null;a.layer=null}),this.handles.remove("sublayers-owner"));a&&(a.forEach(function(a){a.parent=d;a.layer=d}),this.handles.add([a.on("after-add",function(a){a=a.item;a.parent=d;a.layer=d}),a.on("after-remove",function(a){a=a.item;a.parent=null;a.layer=null})],"sublayers-owner"),"tile"===this.type&&this.handles.add(a.on("before-changes",
function(a){y.error(new t("tilelayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{layer:d}));a.preventDefault()}),"sublayers-owner"))};d([p.property({readOnly:!0})],h.prototype,"allSublayers",void 0);d([p.property({readOnly:!0,type:f.ofType(g)})],h.prototype,"serviceSublayers",void 0);d([p.property({value:null,type:z,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],h.prototype,"sublayers",void 0);d([p.property({readOnly:!0})],h.prototype,
"sublayersSourceJSON",void 0);return h=d([p.subclass("esri.layers.mixins.SublayersOwner")],h)}(p.declared(k))}})},"esri/layers/support/Sublayer":function(){define("require exports ../../core/tsSupport/declareExtendsHelper ../../core/tsSupport/decorateHelper ../../core/tsSupport/paramHelper ../../core/tsSupport/generatorHelper ../../core/tsSupport/awaiterHelper ../../core/tsSupport/assignHelper ../../geometry ../../PopupTemplate ../../renderers ../../request ../../symbols ../../core/Collection ../../core/Error ../../core/HandleOwner ../../core/lang ../../core/Loadable ../../core/Logger ../../core/MultiOriginJSONSupport ../../core/promiseUtils ../../core/urlUtils ../../core/accessorSupport/decorators ../../core/accessorSupport/ensureType ../../core/accessorSupport/utils ./commonProperties ./FeatureType ./Field ./FieldsIndex ./fieldUtils ./LabelClass ./layerSourceUtils ../../renderers/support/jsonUtils ../../support/popupUtils ../../tasks/support/Query".split(" "),
function(u,k,h,a,d,f,c,t,q,p,n,v,g,m,x,l,y,z,J,L,B,M,e,E,C,F,K,N,O,P,Q,r,T,G,S){function R(a){return a&&"esriSMS"===a.type}function D(a,b,c){return{ignoreOrigin:!0,enabled:c&&c.writeSublayerStructure||!1}}function H(a,b,c){return{enabled:c&&c.writeSublayerStructure||!1}}var I=J.getLogger("esri.layers.support.Sublayer"),U=0,A=new Set;A.add("layer");A.add("parent");A.add("loaded");A.add("loadStatus");A.add("loadError");A.add("loadWarnings");return function(d){function b(a){a=d.call(this,a)||this;a.fields=
null;a.fullExtent=null;a.globalIdField=null;a.legendEnabled=!0;a.objectIdField=null;a.popupEnabled=!0;a.popupTemplate=null;a.title=null;a.typeIdField=null;a.types=null;return a}h(b,d);l=b;b.prototype.load=function(a){return c(this,void 0,void 0,function(){var w=this;return f(this,function(b){this.addResolvingPromise(function(){return c(w,void 0,void 0,function(){var w,b;return f(this,function(c){switch(c.label){case 0:if(!this.layer)throw new x("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",
{sublayer:this});w=null;return 2<this.originIdOf("url")||r.isDataLayerSource(this.source)?[4,v(this.url,t({responseType:"json",query:{f:"json"}},a))]:[3,2];case 1:return b=c.sent(),w=b.data,[3,4];case 2:return[4,this.layer.fetchSublayerInfo(this.id,a)];case 3:w=c.sent(),c.label=4;case 4:return w&&this.read({layerDefinition:w},{origin:"service"}),[2]}})})}());return[2,this]})})};Object.defineProperty(b.prototype,"definitionExpression",{set:function(a){this._setAndNotifyLayer("definitionExpression",
a)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"fieldsIndex",{get:function(){return new O(this.fields||[])},enumerable:!0,configurable:!0});b.prototype.readGlobalIdFieldFromService=function(a,b){b=b.layerDefinition||b;if(b.globalIdField)return b.globalIdField;if(b.fields)for(a=0,b=b.fields;a<b.length;a++){var w=b[a];if("esriFieldTypeGlobalID"===w.type)return w.name}};Object.defineProperty(b.prototype,"id",{get:function(){var a=this._get("id");return null==a?U++:a},set:function(a){this._get("id")!==
a&&(!1===this.get("layer.capabilities.exportMap.supportsDynamicLayers")?this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"):this._set("id",a))},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"labelingInfo",{set:function(a){this._setAndNotifyLayer("labelingInfo",a)},enumerable:!0,configurable:!0});b.prototype.writeLabelingInfo=function(a,b,c,d){a&&a.length&&(b.layerDefinition={drawingInfo:{labelingInfo:a.map(function(a){return a.write({},
d)})}})};Object.defineProperty(b.prototype,"labelsVisible",{set:function(a){this._setAndNotifyLayer("labelsVisible",a)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"layer",{set:function(a){this._set("layer",a);this.sublayers&&this.sublayers.forEach(function(b){return b.layer=a})},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"listMode",{set:function(a){this._set("listMode",a)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"minScale",{set:function(a){this._setAndNotifyLayer("minScale",
a)},enumerable:!0,configurable:!0});b.prototype.readMinScale=function(a,b){return b.minScale||b.layerDefinition&&b.layerDefinition.minScale||0};Object.defineProperty(b.prototype,"maxScale",{set:function(a){this._setAndNotifyLayer("maxScale",a)},enumerable:!0,configurable:!0});b.prototype.readMaxScale=function(a,b){return b.maxScale||b.layerDefinition&&b.layerDefinition.maxScale||0};b.prototype.readObjectIdFieldFromService=function(a,b){b=b.layerDefinition||b;if(b.objectIdField)return b.objectIdField;
if(b.fields)for(a=0,b=b.fields;a<b.length;a++){var c=b[a];if("esriFieldTypeOID"===c.type)return c.name}};Object.defineProperty(b.prototype,"opacity",{set:function(a){this._setAndNotifyLayer("opacity",a)},enumerable:!0,configurable:!0});b.prototype.readOpacity=function(a,b){a=b.layerDefinition;return 1-.01*(null!=a.transparency?a.transparency:a.drawingInfo.transparency)};b.prototype.writeOpacity=function(a,b,c,d){b.layerDefinition={drawingInfo:{transparency:100-100*a}}};b.prototype.writeParent=function(a,
b){b.parentLayerId=this.parent&&this.parent!==this.layer?this.parent.id:-1};Object.defineProperty(b.prototype,"defaultPopupTemplate",{get:function(){return this.createPopupTemplate()},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"renderer",{set:function(a){if(a)for(var b=0,c=a.getSymbols();b<c.length;b++)if(g.isSymbol3D(c[b])){I.warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",a)},enumerable:!0,configurable:!0});b.prototype.readRenderer=
function(a,b,c){if(a=b.layerDefinition.drawingInfo.renderer||void 0)(a=T.read(a,b,c)||void 0)||I.error("Failed to create renderer",{rendererDefinition:b.drawingInfo.renderer,layer:this,context:c});return a};b.prototype.writeRenderer=function(a,b,c,d){b.layerDefinition={drawingInfo:{renderer:a.write({},d)}}};b.prototype.writeWebSceneRenderer=function(a,b,c,d){b.layerDefinition={drawingInfo:{renderer:a.write({},d)}}};Object.defineProperty(b.prototype,"source",{get:function(){return this._get("source")||
{mapLayerId:this.id,type:r.MAPLAYER}},set:function(a){this._setAndNotifyLayer("source",a)},enumerable:!0,configurable:!0});b.prototype.writeSource=function(a,b){b.layerDefinition={source:r.sourceToJSON(a)}};Object.defineProperty(b.prototype,"sublayers",{set:function(a){this._handleSublayersChange(a,this._get("sublayers"));this._set("sublayers",a)},enumerable:!0,configurable:!0});b.prototype.castSublayers=function(a){return E.default(m.ofType(l),a)};b.prototype.writeSublayers=function(a,b,c){this.get("sublayers.length")&&
(b[c]=this.sublayers.map(function(a){return a.id}).toArray().reverse())};b.prototype.readTypeIdField=function(a,b){b=b.layerDefinition||b;if(a=b.typeIdField)if(b=P.getField(b.fields,a))return b.name;return null};Object.defineProperty(b.prototype,"url",{get:function(){var a=this.layer,b=this.source;if(!a)return null;if(r.isMapLayerSource(b))return a.parsedUrl.path+"/"+b.mapLayerId;b={layer:JSON.stringify({source:r.sourceToJSON(this.source)})};return a.parsedUrl.path+"/dynamicLayer?"+M.objectToQuery(b)},
set:function(a){a?this._override("url",a):this._clearOverride("url")},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"visible",{set:function(a){this._setAndNotifyLayer("visible",a)},enumerable:!0,configurable:!0});b.prototype.writeVisible=function(a,b,c,d){b[c]=this.getAtOrigin("defaultVisibility","service")||a};b.prototype.clone=function(){var a=C.getProperties(this).store,b=new l;C.getProperties(b).store=a.clone(A);return b};b.prototype.createPopupTemplate=function(a){return G.createPopupTemplate(this,
a)};b.prototype.createQuery=function(){return new S({returnGeometry:!0,where:this.definitionExpression||"1\x3d1"})};b.prototype.createFeatureLayer=function(){return c(this,void 0,void 0,function(){var a,b,c,d,e;return f(this,function(m){switch(m.label){case 0:if(this.hasOwnProperty("sublayers"))return[2,null];a=this.layer&&this.layer.parsedUrl;b=this.source;c=null;a&&(c=r.isMapLayerSource(b)?a.path+"/"+b.mapLayerId:a.path+"/dynamicLayer");return[4,B.create(function(a){return u(["../FeatureLayer"],
a)})];case 1:return d=m.sent(),e=new d({url:c}),this.definitionExpression&&(e.definitionExpression=this.definitionExpression),2<this.originIdOf("labelingInfo")&&(e.labelingInfo=y.clone(this.labelingInfo)),0<this.originIdOf("labelsVisible")&&(e.labelsVisible=this.labelsVisible),0<this.originIdOf("legendEnabled")&&(e.legendEnabled=this.legendEnabled),0<this.originIdOf("visible")&&(e.visible=this.visible),0<this.originIdOf("minScale")&&(e.minScale=this.minScale),0<this.originIdOf("maxScale")&&(e.maxScale=
this.maxScale),0<this.originIdOf("opacity")&&(e.opacity=this.opacity),0<this.originIdOf("popupTemplate")&&(e.popupTemplate=y.clone(this.popupTemplate)),2<this.originIdOf("renderer")&&(e.renderer=y.clone(this.renderer)),r.isDataLayerSource(this.source)&&(e.dynamicDataSource=y.clone(this.source)),0<this.originIdOf("title")&&(e.title=this.title),[2,e]}})})};b.prototype.getFeatureType=function(a){var b=this.typeIdField;if(!b||!a)return null;var c=a.attributes?a.attributes[b]:void 0;if(null==c)return null;
var d=null;this.types.some(function(a){var b=a.id;if(null==b)return!1;b.toString()===c.toString()&&(d=a);return!!d});return d};b.prototype.getFieldDomain=function(a,b){return(b=this.getFeatureType(b&&b.feature))&&(b=b.domains&&b.domains[a])&&"inherited"!==b.type?b:this._getLayerDomain(a)};b.prototype.queryFeatures=function(a,b){var c=this;void 0===a&&(a=this.createQuery());return B.all([B.create(function(a){return u(["../../tasks/operations/query"],a)}),B.create(function(a){return u(["../../tasks/support/FeatureSet"],
a)})]).then(function(d){var e=d[0].executeQuery,m=d[1];return e(c.url,S.from(a),b).then(function(a){return m.fromJSON(a.data)})}).then(function(a){a&&a.features&&a.features.forEach(function(a){a.sourceLayer=c});return a})};b.prototype.toExportImageJSON=function(){var a=this,b={id:this.id,source:r.sourceToJSON(this.source)};this.definitionExpression&&(b.definitionExpression=this.definitionExpression);var c=["renderer","labelingInfo","opacity","labelsVisible"].reduce(function(b,c){b[c]=a.originIdOf(c);
return b},{});if(Object.keys(c).some(function(a){return 2<=c[a]})){var d=b.drawingInfo={};2<=c.renderer&&(d.renderer=this.renderer?this.renderer.toJSON():null);2<=c.labelsVisible&&(d.showLabels=this.labelsVisible);this.labelsVisible&&2<=c.labelingInfo&&(d.labelingInfo=this.labelingInfo?this.labelingInfo.map(function(a){return a.write({},{origin:"service"})}):null,d.showLabels=!0);2<=c.opacity&&(d.transparency=100-100*this.opacity);this._assignDefaultSymbolColors(d.renderer)}return b};b.prototype._assignDefaultSymbolColors=
function(a){this._forEachSimpleMarkerSymbols(a,function(a){a.color||"esriSMSX"!==a.style&&"esriSMSCross"!==a.style||(a.color=a.outline&&a.outline.color?a.outline.color:[0,0,0,0])})};b.prototype._forEachSimpleMarkerSymbols=function(a,b){if(a){var c=0,d="uniqueValueInfos"in a?a.uniqueValueInfos:"classBreakInfos"in a?a.classBreakInfos:[];for(;c<d.length;c++){var e=d[c];R(e.symbol)&&b(e.symbol)}"symbol"in a&&R(a.symbol)&&b(a.symbol);"defaultSymbol"in a&&R(a.defaultSymbol)&&b(a.defaultSymbol)}};b.prototype._setAndNotifyLayer=
function(a,b){var c=this.layer,d=this._get(a),e;switch(a){case "definitionExpression":e="supportsSublayerDefinitionExpression";case "minScale":case "maxScale":case "visible":e="supportsSublayerVisibility";break;case "labelingInfo":case "labelsVisible":case "opacity":case "renderer":case "source":e="supportsDynamicLayers"}e&&!1===this.get("layer.capabilities.exportMap."+e)?this._logLockedError(a,"capability not available 'layer.capabilities.exportMap."+e+"'"):"source"===a&&"not-loaded"!==this.loadStatus?
this._logLockedError(a,"'source' can't be changed after calling sublayer.load()"):(this._set(a,b),d!==b&&c&&c.emit&&c.emit("sublayer-update",{propertyName:a}))};b.prototype._handleSublayersChange=function(a,b){var c=this;b&&(b.forEach(function(a){a.parent=null;a.layer=null}),this.handles.removeAll());a&&(a.forEach(function(a){a.parent=c;a.layer=c.layer}),this.handles.add([a.on("after-add",function(a){a=a.item;a.parent=c;a.layer=c.layer}),a.on("after-remove",function(a){a=a.item;a.parent=null;a.layer=
null}),a.on("before-changes",function(a){var b=c.get("layer.capabilities.exportMap.supportsSublayersChanges");null==b||b||(I.error(new x("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:c,layer:c.layer})),a.preventDefault())})]))};b.prototype._logLockedError=function(a,b){I.error(new x("sublayer:locked","Property '"+a+"' can't be changed on Sublayer from the layer '"+this.layer.id+"'",{reason:b,sublayer:this,layer:this.layer}))};
b.prototype._getLayerDomain=function(a){return(a=this.fieldsIndex.get(a))?a.domain:null};var l;a([e.property({type:String,value:null,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],b.prototype,"definitionExpression",null);a([e.property({type:[N],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],b.prototype,"fields",void 0);a([e.property({readOnly:!0,dependsOn:["fields"]})],b.prototype,"fieldsIndex",null);a([e.property({type:q.Extent,
json:{read:{source:"layerDefinition.extent"}}})],b.prototype,"fullExtent",void 0);a([e.property({type:String})],b.prototype,"globalIdField",void 0);a([e.reader("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],b.prototype,"readGlobalIdFieldFromService",null);a([e.property({type:Number,json:{write:{ignoreOrigin:!0}}})],b.prototype,"id",null);a([e.property({value:null,type:[Q],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",
overridePolicy:H}}})],b.prototype,"labelingInfo",null);a([e.writer("labelingInfo")],b.prototype,"writeLabelingInfo",null);a([e.property({type:Boolean,value:!0,json:{read:{source:"showLabels"},write:{target:"showLabels",overridePolicy:H}}})],b.prototype,"labelsVisible",null);a([e.property({value:null})],b.prototype,"layer",null);a([e.property(F.legendEnabled)],b.prototype,"legendEnabled",void 0);a([e.property({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,
write:!0}}}})],b.prototype,"listMode",null);a([e.property({type:Number,value:0,json:{write:{enabled:!1,overridePolicy:D}}})],b.prototype,"minScale",null);a([e.reader("minScale",["minScale","layerDefinition.minScale"])],b.prototype,"readMinScale",null);a([e.property({type:Number,value:0,json:{write:{enabled:!1,overridePolicy:D}}})],b.prototype,"maxScale",null);a([e.reader("maxScale",["maxScale","layerDefinition.maxScale"])],b.prototype,"readMaxScale",null);a([e.property({type:String})],b.prototype,
"objectIdField",void 0);a([e.reader("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],b.prototype,"readObjectIdFieldFromService",null);a([e.property({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:H}}})],b.prototype,"opacity",null);a([e.reader("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],b.prototype,"readOpacity",null);a([e.writer("opacity")],b.prototype,"writeOpacity",
null);a([e.property({json:{type:Number,write:{target:"parentLayerId",allowNull:!0,overridePolicy:D}}})],b.prototype,"parent",void 0);a([e.writer("parent")],b.prototype,"writeParent",null);a([e.property(F.popupEnabled)],b.prototype,"popupEnabled",void 0);a([e.property({type:p,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],b.prototype,"popupTemplate",void 0);a([e.property({readOnly:!0,dependsOn:["fields","title"]})],b.prototype,"defaultPopupTemplate",null);a([e.property({types:n.rendererTypes,
value:null,json:{write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:H}}})],b.prototype,"renderer",null);a([e.reader("renderer",["layerDefinition.drawingInfo.renderer"])],b.prototype,"readRenderer",null);a([e.writer("renderer")],b.prototype,"writeRenderer",null);a([e.writer("web-scene","renderer",{"layerDefinition.drawingInfo.renderer":{types:n.webSceneRendererTypes}})],b.prototype,"writeWebSceneRenderer",null);a([e.property({cast:r.castSource,json:{read:{source:"layerDefinition.source",
reader:r.sourceFromJSON},write:{target:"layerDefinition.source",overridePolicy:D}}})],b.prototype,"source",null);a([e.writer("source")],b.prototype,"writeSource",null);a([e.property({value:null,json:{type:[E.Integer],write:{target:"subLayerIds",allowNull:!0,overridePolicy:D}}})],b.prototype,"sublayers",null);a([e.cast("sublayers")],b.prototype,"castSublayers",null);a([e.writer("sublayers")],b.prototype,"writeSublayers",null);a([e.property({type:String,json:{read:{source:"name"},write:{target:"name",
allowNull:!0}}})],b.prototype,"title",void 0);a([e.property({type:String})],b.prototype,"typeIdField",void 0);a([e.reader("typeIdField",["layerDefinition.typeIdField"])],b.prototype,"readTypeIdField",null);a([e.property({type:[K],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],b.prototype,"types",void 0);a([e.property({type:String,dependsOn:["layer","source"],json:{read:{source:"layerUrl"},write:{target:"layerUrl",overridePolicy:function(){return{enabled:this._isOverridden("url")}}}}})],
b.prototype,"url",null);a([e.property({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:D}}})],b.prototype,"visible",null);a([e.writer("visible")],b.prototype,"writeVisible",null);return b=l=a([e.subclass("esri.layers.support.Sublayer")],b)}(e.declared(l.HandleOwnerMixin(L.MultiOriginJSONMixin(z))))})},"esri/layers/support/sublayerUtils":function(){define(["require","exports","./layerSourceUtils"],function(u,k,h){function a(a,c,k){return a.some(function(a){var c=
a.source;return!(!c||c.type===h.MAPLAYER&&c.mapLayerId===a.id&&(!c.gdbVersion||c.gdbVersion===k.gdbVersion))||2<a.originIdOf("renderer")||2<a.originIdOf("labelingInfo")||2<a.originIdOf("opacity")||2<a.originIdOf("labelsVisible")})?!0:!d(a,c)}function d(a,c){if(!a||!a.length)return!0;c=c.slice().reverse().flatten(function(a){return(a=a.sublayers)&&a.toArray().reverse()}).map(function(a){return a.id}).toArray();if(a.length>c.length)return!1;for(var d=0,f=c.length,h=0;h<a.length;h++){for(var k=a[h].id;d<
f&&c[d]!==k;)d++;if(d>=f)return!1}return!0}Object.defineProperty(k,"__esModule",{value:!0});k.shouldWriteSublayerStructure=function(d,c,h){var f=c.flatten(function(a){return a.sublayers}).length,k=d.some(function(a){return 2<a.originIdOf("minScale")||2<a.originIdOf("maxScale")});return f!==d.length||k||a(d,c,h)};k.isExportDynamic=a;k.isSublayerOverhaul=function(a){return!!a&&a.some(function(a){return null!=a.minScale||a.layerDefinition&&null!=a.layerDefinition.minScale})}})},"esri/layers/support/ExportImageParameters":function(){define("require exports ../../core/tsSupport/assignHelper ../../core/tsSupport/declareExtendsHelper ../../core/tsSupport/decorateHelper ../../core/Accessor ../../core/accessorSupport/decorators ./sublayerUtils ./timeUtils ../../views/View".split(" "),
function(u,k,h,a,d,f,c,t,q,p){Object.defineProperty(k,"__esModule",{value:!0});var n={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};u=function(f){function g(){var a=null!==f&&f.apply(this,arguments)||this;a._scale=null;a.view=null;return a}a(g,f);Object.defineProperty(g.prototype,"dynamicLayers",
{get:function(){if(!this.hasDynamicLayers)return null;var a=this.visibleSublayers.map(function(a){return a.toExportImageJSON()});return a.length?JSON.stringify(a):null},enumerable:!0,configurable:!0});Object.defineProperty(g.prototype,"hasDynamicLayers",{get:function(){return this.layer&&t.isExportDynamic(this.visibleSublayers,this.layer.serviceSublayers,this.layer)},enumerable:!0,configurable:!0});Object.defineProperty(g.prototype,"layer",{set:function(a){var c=this;this._get("layer")!==a&&(this._set("layer",
a),this._layerHandles&&(this._layerHandles.forEach(function(a){return a.remove()}),this._layerHandles.length=0),a&&(this._layerHandles=[a.allSublayers.on("change",function(){return c.notifyChange("visibleSublayers")}),a.on("sublayer-update",function(a){return c.notifyChange(n[a.propertyName])})]))},enumerable:!0,configurable:!0});Object.defineProperty(g.prototype,"layers",{get:function(){var a=this.visibleSublayers;return a?a.length?"show:"+a.map(function(a){return a.id}).join(","):"show:-1":null},
enumerable:!0,configurable:!0});Object.defineProperty(g.prototype,"layerDefs",{get:function(){var a=this.visibleSublayers.filter(function(a){return null!=a.definitionExpression});return a.length?JSON.stringify(a.reduce(function(a,c){a[c.id]=c.definitionExpression;return a},{})):null},enumerable:!0,configurable:!0});Object.defineProperty(g.prototype,"scale",{get:function(){return null!=this._scale?this._scale:this.view&&this.view.scale||0},set:function(a){this.view||(this._scale=a,this.notifyChange("scale"))},
enumerable:!0,configurable:!0});Object.defineProperty(g.prototype,"version",{get:function(){this.layers;this.layerDefs;this.dynamicLayers;this.timeExtent;var a=this.layer;a&&(a.dpi,a.imageFormat,a.imageTransparency,a.gdbVersion);return(this._get("version")||0)+1},set:function(a){this._set("version",a)},enumerable:!0,configurable:!0});Object.defineProperty(g.prototype,"visibleSublayers",{get:function(){var a=this,c=[];if(!this.layer)return c;var d=this.layer.sublayers,f=function(d){var h=a.scale,g=
0===d.minScale||h<=d.minScale,k=0===d.maxScale||h>=d.maxScale;d.visible&&(0===h||g&&k)&&(d.sublayers?d.sublayers.forEach(f):c.unshift(d))};d&&d.forEach(f);d=this._get("visibleSublayers");return!d||d.length!==c.length||d.some(function(a,d){return c[d]!==a})?c:d},enumerable:!0,configurable:!0});g.prototype.toJSON=function(){var a=this.layer,a={dpi:a.dpi,format:a.imageFormat,transparent:a.imageTransparency,gdbVersion:a.gdbVersion||null};this.hasDynamicLayers&&this.dynamicLayers?a.dynamicLayers=this.dynamicLayers:
a=h({},a,{layers:this.layers,layerDefs:this.layerDefs});return a};d([c.property({readOnly:!0,dependsOn:["hasDynamicLayers","visibleSublayers"]})],g.prototype,"dynamicLayers",null);d([c.property({readOnly:!0,dependsOn:["visibleSublayers","layer.serviceSublayers","layer.capabilities"]})],g.prototype,"hasDynamicLayers",null);d([c.property()],g.prototype,"layer",null);d([c.property({readOnly:!0,dependsOn:["visibleSublayers"]})],g.prototype,"layers",null);d([c.property({readOnly:!0,dependsOn:["visibleSublayers"]})],
g.prototype,"layerDefs",null);d([c.property({type:Number,dependsOn:["view.scale"]})],g.prototype,"scale",null);d([c.property(q.combinedViewLayerTimeExtentProperty)],g.prototype,"timeExtent",void 0);d([c.property({dependsOn:"layers layerDefs dynamicLayers layer.dpi layer.imageFormat layer.imageTransparency layer.gdbVersion timeExtent".split(" ")})],g.prototype,"version",null);d([c.property({type:p})],g.prototype,"view",void 0);d([c.property({readOnly:!0,dependsOn:["layer.sublayers","scale"]})],g.prototype,
"visibleSublayers",null);return g=d([c.subclass("esri.layers.mixins.ExportImageParameters")],g)}(c.declared(f));k.ExportImageParameters=u})},"*noref":1}});
define("require exports ../core/tsSupport/assignHelper ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../core/tsSupport/paramHelper ../core/tsSupport/generatorHelper ../core/tsSupport/awaiterHelper ../request ../core/Error ../core/HandleOwner ../core/loadAll ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/accessorSupport/decorators ../core/accessorSupport/ensureType ../core/accessorSupport/PropertyOrigin ../geometry/support/scaleUtils ./Layer ./mixins/ArcGISMapService ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/SublayersOwner ./mixins/TemporalLayer ./support/commonProperties ./support/ExportImageParameters ./support/Sublayer ./support/sublayerUtils".split(" "),function(u,
k,h,a,d,f,c,t,q,p,n,v,g,m,x,l,y,z,J,L,B,M,e,E,C,F,K,N,O,P,Q,r){return function(e){function f(a,c){a=e.call(this,a)||this;a.alwaysRefetch=!1;a.dpi=96;a.gdbVersion=null;a.imageFormat="png24";a.imageMaxHeight=2048;a.imageMaxWidth=2048;a.imageTransparency=!0;a.labelsVisible=!1;a.isReference=null;a.operationalLayerType="ArcGISMapServiceLayer";a.sourceJSON=null;a.sublayers=null;a.type="map-image";a.url=null;return a}a(f,e);f.prototype.normalizeCtorArgs=function(a,c){return"string"===typeof a?h({url:a},
c):a};f.prototype.load=function(a){var c=this,d=g.isSome(a)?a.signal:null;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},a).then(function(){return c._fetchService(d)}));return this.when()};f.prototype.readImageFormat=function(a,c){return(a=c.supportedImageFormatTypes)&&-1<a.indexOf("PNG32")?"png32":"png24"};f.prototype.writeSublayers=function(a,c,d,e){if(this.loaded&&a){a=a.slice().reverse().flatten(function(a){return(a=a.sublayers)&&a.toArray().reverse()}).toArray();
d=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){var f=z.nameToId(e.origin);3===f?(d=this.createSublayersForOrigin("service").sublayers,d=r.shouldWriteSublayerStructure(a,d,this)):3<f&&(d=this.createSublayersForOrigin("portal-item").sublayers,d=r.shouldWriteSublayerStructure(a,d,this))}var g=[],k=h({writeSublayerStructure:d},e),l=d;a.forEach(function(a){var b=a.write({},k);g.push(b);l=l||"user"===a.originOf("visible")});
g.some(function(a){return 1<Object.keys(a).length})&&(c.layers=g);l&&(c.visibleLayers=a.filter(function(a){return a.visible}).map(function(a){return a.id}))}};f.prototype.createExportImageParameters=function(a,c,d,e){var f=e&&e.pixelRatio||1;a&&10<=this.version&&(a=a.clone().shiftCentralMeridian());var g=new P.ExportImageParameters({layer:this,scale:J.getScale({extent:a,width:c})*f}),k=g.toJSON();g.layer=null;g.destroy();var g=!e||!e.rotation||10.3>this.version?{}:{rotation:-e.rotation},l=a&&a.spatialReference,
l=l.wkid||JSON.stringify(l.toJSON());k.dpi*=f;f={};if(e&&e.timeExtent){var b=e.timeExtent.toJSON();e=b.start;b=b.end;if(e&&b&&e===b)f.time=""+e;else if(null!=e||null!=b)f.time=(null==e?"null":e)+","+(null==b?"null":b)}return h({bbox:a&&a.xmin+","+a.ymin+","+a.xmax+","+a.ymax,bboxSR:l,imageSR:l,size:c+","+d},k,g,f)};f.prototype.fetchImage=function(a,c,d,e){var f={responseType:"image"};e&&e.timestamp&&(f.query={_ts:e.timestamp});e&&e.signal&&(f.signal=e.signal);var g=this.parsedUrl.path+"/export";a=
h({},this.parsedUrl.query,this.createExportImageParameters(a,c,d,e),{f:"image",_ts:this.alwaysRefetch?Date.now():null});if(null!=a.dynamicLayers&&!this.capabilities.exportMap.supportsDynamicLayers)return x.reject(new p("mapimagelayer:dynamiclayer-not-supported","service "+this.url+" doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.",{query:a}));f.query=f.query?h({},a,f.query):a;return q(g,f).then(function(a){return a.data}).catch(function(a){if(x.isAbortError(a))throw a;
throw new p("mapimagelayer:image-fetch-error","Unable to load image: "+g,{error:a});})};f.prototype.loadAll=function(){var a=this;return v.default(this,function(c){c(a.allSublayers)})};f.prototype._fetchService=function(a){return t(this,void 0,void 0,function(){var d,e,f;return c(this,function(c){switch(c.label){case 0:return this.sourceJSON?(this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl}),[2]):[4,q(this.parsedUrl.path,{query:h({f:"json"},this.parsedUrl.query),signal:a})];case 1:d=
c.sent();e=d.data;if(f=d.ssl)this.url=this.url.replace(/^http:/i,"https:");this.sourceJSON=e;this.read(e,{origin:"service",url:this.parsedUrl});return[2]}})})};d([l.property()],f.prototype,"alwaysRefetch",void 0);d([l.property()],f.prototype,"dpi",void 0);d([l.property()],f.prototype,"gdbVersion",void 0);d([l.property({json:{read:!1,write:!1}})],f.prototype,"popupEnabled",void 0);d([l.property()],f.prototype,"imageFormat",void 0);d([l.reader("imageFormat",["supportedImageFormatTypes"])],f.prototype,
"readImageFormat",null);d([l.property({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],f.prototype,"imageMaxHeight",void 0);d([l.property({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],f.prototype,"imageMaxWidth",void 0);d([l.property()],f.prototype,"imageTransparency",void 0);d([l.property({json:{read:!1,write:!1}})],f.prototype,"labelsVisible",void 0);d([l.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:function(){return{enabled:!1}}}}})],f.prototype,
"isReference",void 0);d([l.property({type:["ArcGISMapServiceLayer"]})],f.prototype,"operationalLayerType",void 0);d([l.property()],f.prototype,"sourceJSON",void 0);d([l.property({json:{write:{ignoreOrigin:!0}}})],f.prototype,"sublayers",void 0);d([l.writer("sublayers",{layers:{type:[Q]},visibleLayers:{type:[y.Integer]}})],f.prototype,"writeSublayers",null);d([l.property({type:["show","hide","hide-children"]})],f.prototype,"listMode",void 0);d([l.property({json:{read:!1},readOnly:!0,value:"map-image"})],
f.prototype,"type",void 0);d([l.property(O.url)],f.prototype,"url",void 0);return f=d([l.subclass("esri.layers.MapImageLayer")],f)}(l.declared(N.TemporalLayer(F.ScaleRangeLayer(C.RefreshableLayer(K.SublayersOwner(B.ArcGISMapService(M.ArcGISService(e.OperationalLayer(E.PortalLayer(m.MultiOriginJSONMixin(n.HandleOwnerMixin(L))))))))))))});