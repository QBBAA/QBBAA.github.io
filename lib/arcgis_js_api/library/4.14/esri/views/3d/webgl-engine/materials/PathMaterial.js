// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.15/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/tsSupport/assignHelper ../../../../core/tsSupport/extendsHelper ../../../../core/mathUtils ../../../../geometry/support/aaBoundingBox ../../support/buffer/BufferView ../../support/buffer/InterleavedLayout ../lib/geometryDataUtils ../lib/GLMaterial ../lib/Material ../lib/Util ./PathTechnique ./VisualVariableMaterialParameters ./internal/bufferWriterUtils ./internal/MaterialUtil ./internal/MaterialUtil ./renderers/MergedRenderer".split(" "),function(g,I,r,k,
n,t,u,v,w,x,y,z,d,A,p,B,q,C){var D=z.assert;g=function(e){function b(a,c){c=e.call(this,c)||this;c.supportsEdges=!0;c.techniqueConfig=new d.PathTechniqueConfiguration;c.params=q.copyParameters(a,E);c.vertexBufferLayout=b.getVertexBufferLayout(c.params);return c}k(b,e);b.prototype.getTechniqueConfig=function(a){this.techniqueConfig.output=a;this.techniqueConfig.vvSize=this.params.vvSizeEnabled;this.techniqueConfig.vvColor=this.params.vvColorEnabled;this.techniqueConfig.vvOpacity=this.params.vvOpacityEnabled;
this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled;this.techniqueConfig.transparent=this.params.transparent;0===a&&(this.techniqueConfig.doubleSidedMode=this.params.doubleSided&&"normal"===this.params.doubleSidedType?1:this.params.doubleSided&&"winding-order"===this.params.doubleSidedType?2:0,this.techniqueConfig.receiveShadows=this.params.receiveShadows,this.techniqueConfig.receiveSSAO=this.params.receiveSSAO);return this.techniqueConfig};b.prototype.getPassParameters=function(){return this.params};
b.prototype.isVisibleInPass=function(a){return 3===a?this.params.castShadows:!0};b.prototype.isVisible=function(){var a=this.params;return e.prototype.isVisible.call(this)?0<a.opacity:!1};b.prototype.setParameterValues=function(a){B.updateParameters(this.params,a)&&this.parametersChanged()};b.prototype.getParameters=function(){return this.params};b.prototype.intersect=function(a,b,d,e,l,m,F){if(a.metadata){b=a.metadata.pathGeometry;d=[this.params.size[0],this.params.size[1]];if(this.params.vvSizeEnabled){var c=
this.params.vvSizeOffset,h=this.params.vvSizeFactor,f=this.params.vvSizeMinSize,g=this.params.vvSizeMaxSize,k=b.sizeAttributeValue;d[0]*=n.clamp(c[0]+k*h[0],f[0],g[0]);d[1]*=n.clamp(c[1]+k*h[1],f[1],g[1])}c=Math.max(d[0],d[1]);a=t.fromValues(a.boundingInfo.bbMin[0]-c,a.boundingInfo.bbMin[1]-c,a.boundingInfo.bbMin[2]-c,a.boundingInfo.bbMax[0]+c,a.boundingInfo.bbMax[1]+c,a.boundingInfo.bbMax[2]+c);c=[m[0]-l[0],m[1]-l[1],m[2]-l[2]];h=Math.sqrt(c[0]*c[0]+c[1]*c[1]+c[2]*c[2]);q.intersectAabbInvDir(a,l,
[h/c[0],h/c[1],h/c[2]],e.tolerance)&&(b.baked.size&&b.baked.size[0]===d[0]&&b.baked.size[1]===d[1]||b.baked.bake(d),b.baked.intersect(l,m,F))}};b.prototype.computeAttachmentOrigin=function(a,c){a=a.data;return(a="getVertexAttr"in a?a.getVertexAttr():"vertexAttr"in a?a.vertexAttr:null)?w.computeAttachmentOriginLines(a[d.PathVertexAttrConstants.POSITION],null,c):null};b.prototype.createBufferWriter=function(){return new G(this.vertexBufferLayout)};b.prototype.createRenderer=function(a,c){return new C(a,
c,this,d.pathVertexAttributeLocations)};b.prototype.getGLMaterial=function(a){if(0===a.output||1===a.output||2===a.output||4===a.output||3===a.output&&this.params.castShadows)return new H(a)};b.getVertexBufferLayout=function(a){var c=v.newLayout().vec3f(d.PathVertexAttrConstants.POSITION).vec4f(d.PathVertexAttrConstants.PROFILERIGHT).vec4f(d.PathVertexAttrConstants.PROFILEUP).vec4f(d.PathVertexAttrConstants.PROFILEVERTEXANDNORMAL);if(a.vvColorEnabled||a.vvSizeEnabled||a.vvOpacityEnabled)c=c.vec4f(d.PathVertexAttrConstants.FEATUREVALUE);
return c};return b}(y.Material);var H=function(e){function b(a){a=e.call(this,a)||this;a.updateParameters();return a}k(b,e);b.prototype.updateParameters=function(){this.technique=this.techniqueRep.acquireAndReleaseExisting(d.PathTechnique,this.material.getTechniqueConfig(this.output),this.technique)};b.prototype.beginSlot=function(a){return a===(this.technique.configuration.transparent?6:4)};b.prototype._updateShadowState=function(a){a.shadowMappingEnabled!==this.technique.configuration.receiveShadows&&
(this.material.setParameterValues({receiveShadows:a.shadowMappingEnabled}),this.updateParameters())};b.prototype.bind=function(a,c){0===this.output&&this._updateShadowState(c);a.bindProgram(this.technique.program);this.technique.bindPipelineState(a);this.technique.bindPass(a,this.material.getPassParameters(),c)};return b}(x.GLMaterial),E=r({size:[1,1,1],ambient:[.2,.2,.2],diffuse:[.8,.8,.8],specular:[0,0,0],opacity:1,doubleSided:!1,doubleSidedType:"normal",receiveSSAO:!0,receiveShadows:!1,castShadows:!0,
slicePlaneEnabled:!1,transparent:!1},A.Default),G=function(){function e(b){this.vertexBufferLayout=b}e.prototype.allocate=function(b){return this.vertexBufferLayout.createBuffer(b)};e.prototype.elementCount=function(b){return b.indices[d.PathVertexAttrConstants.POSITION].length};e.prototype.write=function(b,a,c,e){var f=function(b){if(b in a.vertexAttr){var d=a.vertexAttr[b],f=a.indices[b];D(4===d.size);var g=c.getField(b,u.BufferViewVec4f);if(g)p.writeBufferVec4(f,d.data,g,e);else throw Error("unable to acquire view for "+
b);}};f(d.PathVertexAttrConstants.PROFILERIGHT);f(d.PathVertexAttrConstants.PROFILEUP);f(d.PathVertexAttrConstants.PROFILEVERTEXANDNORMAL);this.vertexBufferLayout.hasField(d.PathVertexAttrConstants.FEATUREVALUE)&&f(d.PathVertexAttrConstants.FEATUREVALUE);p.writeDefaultAttributes(a,this.vertexBufferLayout,b.transformation,b.invTranspTransformation,c,e)};return e}();return g});