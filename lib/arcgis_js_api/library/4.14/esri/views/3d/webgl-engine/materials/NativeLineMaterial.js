// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.15/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/tsSupport/extendsHelper ../../../../core/tsSupport/assignHelper ../../../../core/Logger ../../../../core/maybe ../../../../core/screenUtils ../../../../core/libs/gl-matrix-2/vec2 ../../../../core/libs/gl-matrix-2/vec3 ../../../../core/libs/gl-matrix-2/vec3f64 ../../support/geometryUtils ../../support/buffer/BufferView ../lib/ComponentUtils ../lib/geometryDataUtils ../lib/GLMaterial ../lib/Material ../lib/Util ./internal/bufferWriterUtils ./internal/DefaultBufferWriter ./internal/MaterialUtil ./renderers/MergedRenderer ../shaders/NativeLineTechnique".split(" "),
function(G,ca,H,da,N,z,x,O,e,h,b,P,Q,R,S,T,t,U,A,I,V,J){var W=N.getLogger("esri.views.3d.webgl-engine.materials.NativeLineMaterial");G=function(h){function a(c,a){a=h.call(this,a)||this;a.techniqueConfig=new J.NativeLineTechniqueConfiguration;a.params=I.copyParameters(c,X);return a}H(a,h);a.prototype.setParameterValues=function(c){var a=this.params,d;for(d in c)a[d]=c[d];this.parametersChanged()};a.prototype.getParameters=function(){return this.params};a.prototype.getTechniqueConfig=function(c){this.techniqueConfig.output=
c;this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled;this.techniqueConfig.vertexColors=this.params.vertexColors;this.techniqueConfig.transparent=1>this.params.color[3]||1>this.params.width;c=z.isSome(this.params.stipplePattern);this.techniqueConfig.stippleEnabled=c;this.techniqueConfig.stippleOffColorEnabled=c&&z.isSome(this.params.stippleOffColor);this.techniqueConfig.stippleIntegerRepeatsEnabled=c&&this.params.stippleIntegerRepeats;return this.techniqueConfig};a.prototype.getPassParameters=
function(){return this.params};a.prototype.intersect=function(c,a,d,b,e,m,k,g,f){f?this.intersectLineGeometry(c,a,d,b,k):I.intersectDrapedRenderLineGeometry(c,b,m,1,k)};a.prototype.intersectLineGeometry=function(c,a,d,r,h){if(r.options.selectionMode&&!Q.isAllHidden(a.componentVisibilities,c.componentOffsets))if(t.isTranslationMatrix(d)){a=c.data.getVertexAttr().position.data;var m=r.camera,k=Y;O.vec2.copy(k,r.point);e.vec3.set(y[0],k[0]-2,k[1]+2,0);e.vec3.set(y[1],k[0]+2,k[1]+2,0);e.vec3.set(y[2],
k[0]+2,k[1]-2,0);e.vec3.set(y[3],k[0]-2,k[1]-2,0);for(var g=0;4>g;g++)m.unprojectPoint(y[g],q[g]);b.plane.fromPoints(m.eye,q[0],q[1],C);b.plane.fromPoints(m.eye,q[1],q[2],D);b.plane.fromPoints(m.eye,q[2],q[3],E);b.plane.fromPoints(m.eye,q[3],q[0],F);c=Number.MAX_VALUE;for(g=0;g<a.length-5;g+=3)if(l[0]=a[g]+d[12],l[1]=a[g+1]+d[13],l[2]=a[g+2]+d[14],n[0]=a[g+3]+d[12],n[1]=a[g+4]+d[13],n[2]=a[g+5]+d[14],!(0>b.plane.signedDistance(C,l)&&0>b.plane.signedDistance(C,n)||0>b.plane.signedDistance(D,l)&&0>
b.plane.signedDistance(D,n)||0>b.plane.signedDistance(E,l)&&0>b.plane.signedDistance(E,n)||0>b.plane.signedDistance(F,l)&&0>b.plane.signedDistance(F,n))){m.projectPoint(l,u);m.projectPoint(n,v);if(0>u[2]&&0<v[2]){e.vec3.subtract(p,l,n);var f=m.frustum,B=-b.plane.signedDistance(f.planes[4],l),f=B/e.vec3.dot(p,f.planes[4]);e.vec3.scale(p,p,f);e.vec3.add(l,l,p);m.projectPoint(l,u)}else if(0<u[2]&&0>v[2])e.vec3.subtract(p,n,l),f=m.frustum,B=-b.plane.signedDistance(f.planes[4],n),f=B/e.vec3.dot(p,f.planes[4]),
e.vec3.scale(p,p,f),e.vec3.add(n,n,p),m.projectPoint(n,v);else if(0>u[2]&&0>v[2])continue;u[2]=0;v[2]=0;f=b.lineSegment.distance2(b.lineSegment.fromPoints(u,v,K),k);f<c&&(c=f,e.vec3.copy(L,l),e.vec3.copy(M,n))}d=r.rayBeginPoint;r=r.rayEndPoint;4>c&&(c=Number.MAX_VALUE,b.lineSegment.closestLineSegmentPoint(b.lineSegment.fromPoints(L,M,K),b.lineSegment.fromPoints(d,r,Z),w)&&(e.vec3.subtract(w,w,d),c=e.vec3.length(w),e.vec3.scale(w,w,1/c),c/=e.vec3.distance(d,r)),h(c,w))}else W.error("intersection assumes a translation-only matrix")};
a.prototype.computeAttachmentOrigin=function(c,a){c=c.data;return(c="getVertexAttr"in c?c.getVertexAttr():"vertexAttr"in c?c.vertexAttr:null)?R.computeAttachmentOriginLines(c[t.VertexAttrConstants.POSITION],null,a):null};a.prototype.createBufferWriter=function(){var a=this.params.vertexColors?A.PositionColorLayout:A.PositionLayout;return z.isNone(this.params.stipplePattern)?new A.DefaultBufferWriter(a):new aa(a.clone().vec3f(t.VertexAttrConstants.AUXPOS1))};a.prototype.createRenderer=function(a,b){return new V(a,
b,this)};a.prototype.getGLMaterial=function(a){return 0===a.output||4===a.output?new ba(a):void 0};return a}(T.Material);var ba=function(b){function a(a){a=b.call(this,a)||this;a.updateParameters();return a}H(a,b);a.prototype.updateParameters=function(){this.technique=this.techniqueRep.acquireAndReleaseExisting(J.NativeLineTechnique,this.material.getTechniqueConfig(this.output),this.technique)};a.prototype.beginSlot=function(a){return 4===a};a.prototype.bind=function(a,b){a.bindProgram(this.technique.program);
this.technique.bindPipelineState(a);this.technique.bindPass(a,this.material.getPassParameters(),b)};return a}(S.GLMaterial),aa=function(){function b(a){this.vertexBufferLayout=a}b.prototype.allocate=function(a){return this.vertexBufferLayout.createBuffer(a)};b.prototype.elementCount=function(a){return a.indices[t.VertexAttrConstants.POSITION].length};b.prototype.write=function(a,c,b,d){U.writeDefaultAttributes(c,this.vertexBufferLayout,a.transformation,a.invTranspTransformation,b,d);this.writeAuxpos1(a,
c,b,d)};b.prototype.writeAuxpos1=function(a,b,e,d){var c=e.getField(t.VertexAttrConstants.AUXPOS1,P.BufferViewVec3f);e=b.indices[t.VertexAttrConstants.POSITION];b=b.vertexAttr[t.VertexAttrConstants.POSITION].data;a=a.transformation;var h=c.typedBufferStride,c=c.typedBuffer;d*=h;for(var m=0;m<e.length;m+=2)for(var k=3*e[m],g=b[k],f=b[k+1],l=b[k+2],k=a[0]*g+a[4]*f+a[8]*l+a[12],n=a[1]*g+a[5]*f+a[9]*l+a[13],g=a[2]*g+a[6]*f+a[10]*l+a[14],f=0;2>f;++f)c[d]=k,c[d+1]=n,c[d+2]=g,d+=h};return b}(),X={color:[1,
1,1,1],vertexColors:!1,slicePlaneEnabled:!1,width:1,stipplePattern:null,stippleIntegerRepeats:!1,stippleOffColor:null},l=h.vec3f64.create(),n=h.vec3f64.create(),p=h.vec3f64.create(),w=h.vec3f64.create(),u=x.createRenderScreenPointArray3(),v=x.createRenderScreenPointArray3(),L=h.vec3f64.create(),M=h.vec3f64.create(),K=b.lineSegment.create(),Z=b.lineSegment.create(),Y=h.vec3f64.create(),y=[x.createRenderScreenPointArray3(),x.createRenderScreenPointArray3(),x.createRenderScreenPointArray3(),x.createRenderScreenPointArray3()],
q=[h.vec3f64.create(),h.vec3f64.create(),h.vec3f64.create(),h.vec3f64.create()],C=b.plane.create(),D=b.plane.create(),E=b.plane.create(),F=b.plane.create();return G});